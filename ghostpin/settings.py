"""
Django settings for ghostpin project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path        # For handling file paths

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent # Root directory of the project


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x0l3b9c*ogm8rymr5egpd2-6be^ayim)me9fuyc)e3(pmmf2l^' # Replace with a secure key in production

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # Allow all hosts for development and deployment


# Application definition

INSTALLED_APPS = [
    'django_extensions',    # For additional management commands and utilities
    'django.contrib.admin', # Admin site
    'django.contrib.auth',  # Authentication framework
    'django.contrib.contenttypes',  # Content types framework
    'django.contrib.sessions',  # Session framework
    'django.contrib.messages',  # Messaging framework
    'django.contrib.staticfiles',  # Static files framework
    'pwa',  # Progressive Web App support
    'places',  # Places app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware', # Security middleware for various security enhancements
    'django.contrib.sessions.middleware.SessionMiddleware', # Manages sessions across requests
    'django.middleware.common.CommonMiddleware', # Common HTTP features
    'django.middleware.csrf.CsrfViewMiddleware',    # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Associates users with requests using sessions
    'django.contrib.messages.middleware.MessageMiddleware', # Enables cookie- and session-based message support
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   # Prevents clickjacking attacks
]

ROOT_URLCONF = 'ghostpin.urls'  # Root URL configuration module

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # Global templates directory
        'APP_DIRS': True, # Enable app-specific templates
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',  # Debug context processor
                'django.template.context_processors.request',   # Request context processor 
                'django.template.context_processors.csrf',      # CSRF token context processor
                'django.contrib.auth.context_processors.auth',  # Authentication context processor
                'django.contrib.messages.context_processors.messages',  # Messages context processor
            ],
        },
    },
]

WSGI_APPLICATION = 'ghostpin.wsgi.application'  # WSGI application path


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # Using SQLite for simplicity
        'NAME': BASE_DIR / 'db.sqlite3', # Database file location
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # Validate against user attributes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', # Enforce minimum password length
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # Prevent common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', # Prevent entirely numeric passwords
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'   # Language code for the project

TIME_ZONE = 'UTC' # Time zone for the project

USE_I18N = True # Enable internationalization

USE_TZ = True   # Enable timezone-aware datetimes


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/' # URL to access static files
STATICFILES_DIRS = [
    BASE_DIR / 'static', # Directory for global static files
]
STATIC_ROOT = BASE_DIR / 'staticfiles' # Directory where static files will be collected

# Media files (User uploads)
MEDIA_URL = '/media/'   # URL to access media files
MEDIA_ROOT = BASE_DIR / 'media' # Directory where media files are stored

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'    

# Login/Logout URLs
LOGIN_URL = '/accounts/login/'  # Login URL
LOGIN_REDIRECT_URL = '/'    # Redirect URL after successful login
LOGOUT_REDIRECT_URL = '/'   # Redirect URL after logout

# PWA Configuration
PWA_APP_NAME = 'GhostPin - Explore Historical Places'   # App name
PWA_APP_DESCRIPTION = 'Discover and explore historical places around the world' # App description
PWA_APP_THEME_COLOR = '#4CAF50'  # Green theme color for the app
PWA_APP_BACKGROUND_COLOR = '#ffffff'  # White background
PWA_APP_ICONS = {
    'src': '/static/icons/icon-192x192.png',  # Path to your app icon
    'sizes': '192x192',
    'type': 'image/png',
}
PWA_APP_SIZES = ['192x192', '512x512']  # Icon sizes for various devices

PWA_APP_START_URL = '/'  # The URL the app starts with
PWA_APP_DISPLAY = 'standalone'  # Makes it behave like a native app (no browser UI)
PWA_APP_ORIENTATION = 'portrait-primary'  # Lock to portrait orientation
PWA_APP_SCOPE = '/'  # Define the scope of your app (root path is common)
PWA_APP_LANG = 'en'  # Language of the app
PWA_APP_CATEGORIES = ['travel', 'education', 'lifestyle']  # App categories

# The screenshots are optional but can be a nice touch.
PWA_APP_SCREENSHOTS = [
    {
        'src': '/static/icons/screenshot-mobile.png', # Path to a screenshot image
        'sizes': '390x844',
        'type': 'image/png',
        'form_factor': 'narrow',
    },
    {
        'src': '/static/icons/screenshot-desktop.png', # Path to a screenshot image
        'sizes': '1920x1080',
        'type': 'image/png',
        'form_factor': 'wide',
    },
]

# App Shortcuts (optional for quick links inside the app)
PWA_APP_SHORTCUTS = [
    {
        'name': 'Add New Place',    # Shortcut name
        'short_name': 'Add Place', # Short name for the shortcut
        'description': 'Submit a new historical place', # Description
        'url': '/place/add/',   # URL to navigate to
        'icons': [{'src': '/static/icons/icon-192x192.png', 'sizes': '192x192'}],   # Icon for the shortcut
    }
]
